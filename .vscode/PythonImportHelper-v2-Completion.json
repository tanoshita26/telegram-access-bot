[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "send_telegram_message",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def send_telegram_message(chat_id, message):\n    url = f\"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage\"\n    data = {\"chat_id\": chat_id, \"text\": message}\n    requests.post(url, data=data)\n# ‚úÖ Call Hugging Face GPT-2 model for a response\ndef generate_gpt_response(prompt):\n    try:\n        url = \"https://api-inference.huggingface.co/models/gpt2\"\n        headers = {\"Accept\": \"application/json\"}\n        payload = {\"inputs\": prompt}",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "generate_gpt_response",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def generate_gpt_response(prompt):\n    try:\n        url = \"https://api-inference.huggingface.co/models/gpt2\"\n        headers = {\"Accept\": \"application/json\"}\n        payload = {\"inputs\": prompt}\n        response = requests.post(url, headers=headers, json=payload, timeout=10)\n        data = response.json()\n        return data[0][\"generated_text\"]\n    except Exception as e:\n        return f\"‚ö†Ô∏è GPT Error: {str(e)}\"",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "catch_all",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def catch_all(path):\n    full_url = request.url\n    send_telegram_message(CHAT_ID, f\"üåê Someone accessed: {full_url}\")\n    return f\"‚úÖ Access logged and reported to Telegram.\\n\\n{full_url}\"\n# ‚úÖ Telegram webhook for replies\n@app.route(\"/webhook\", methods=[\"POST\"])\ndef telegram_webhook():\n    data = request.get_json()\n    if \"message\" in data and \"text\" in data[\"message\"]:\n        user_message = data[\"message\"][\"text\"]",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "telegram_webhook",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def telegram_webhook():\n    data = request.get_json()\n    if \"message\" in data and \"text\" in data[\"message\"]:\n        user_message = data[\"message\"][\"text\"]\n        chat_id = data[\"message\"][\"chat\"][\"id\"]\n        reply = generate_gpt_response(user_message)\n        send_telegram_message(chat_id, reply)\n    return {\"ok\": True}\nif __name__ == \"__main__\":\n    port = int(os.environ.get(\"PORT\", 5000))",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = Flask(__name__)\nBOT_TOKEN = \"7395726596:AAFjoArLIaBDYw8SodM9QGT_Prv1rO8rGoE\"\nCHAT_ID = \"7539943162\"\n# ‚úÖ Send message via Telegram\ndef send_telegram_message(chat_id, message):\n    url = f\"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage\"\n    data = {\"chat_id\": chat_id, \"text\": message}\n    requests.post(url, data=data)\n# ‚úÖ Call Hugging Face GPT-2 model for a response\ndef generate_gpt_response(prompt):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "BOT_TOKEN",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "BOT_TOKEN = \"7395726596:AAFjoArLIaBDYw8SodM9QGT_Prv1rO8rGoE\"\nCHAT_ID = \"7539943162\"\n# ‚úÖ Send message via Telegram\ndef send_telegram_message(chat_id, message):\n    url = f\"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage\"\n    data = {\"chat_id\": chat_id, \"text\": message}\n    requests.post(url, data=data)\n# ‚úÖ Call Hugging Face GPT-2 model for a response\ndef generate_gpt_response(prompt):\n    try:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "CHAT_ID",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "CHAT_ID = \"7539943162\"\n# ‚úÖ Send message via Telegram\ndef send_telegram_message(chat_id, message):\n    url = f\"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage\"\n    data = {\"chat_id\": chat_id, \"text\": message}\n    requests.post(url, data=data)\n# ‚úÖ Call Hugging Face GPT-2 model for a response\ndef generate_gpt_response(prompt):\n    try:\n        url = \"https://api-inference.huggingface.co/models/gpt2\"",
        "detail": "main",
        "documentation": {}
    }
]